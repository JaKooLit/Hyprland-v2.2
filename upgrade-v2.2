#!/bin/bash

# Set some colors for output messages
OK="$(tput setaf 2)[OK]$(tput sgr0)"
ERROR="$(tput setaf 1)[ERROR]$(tput sgr0)"
NOTE="$(tput setaf 3)[NOTE]$(tput sgr0)"
WARN="$(tput setaf 166)[WARN]$(tput sgr0)"
CAT="$(tput setaf 6)[ACTION]$(tput sgr0)"
ORANGE=$(tput setaf 166)
YELLOW=$(tput setaf 3)
RESET=$(tput sgr0)

# Set the name of the log file to include the current date and time
LOG="install-$(date +%d-%H%M%S).log"

# Print system-update warning message
printf "\n${NOTE} This will explicitly install Catppuccin GTK Mocha and Latte Themes\n"
printf "\n"
printf "\n"

# proceed
read -n1 -rep "${CAT} Shall we proceed? (y/n) " PROCEED
    echo
if [[ $PROCEED =~ ^[Yy]$ ]]; then
    printf "\n%s  Alright.....LETS BEGIN!.\n" "${OK}"
else
    printf "\n%s  NO changes made to your system. Goodbye.!!!\n" "${NOTE}"
    exit
fi

#clear screen
clear

# Check for AUR helper and install if not found
ISAUR=$(command -v yay || command -v paru)

if [ -n "$ISAUR" ]; then
    printf "\n%s - AUR helper was located, moving on.\n" "${OK}"
else 
    printf "\n%s - AUR helper was NOT located\n" "$WARN"

    while true; do
        read -rp "${CAT} Which AUR helper do you want to use, yay or paru? Enter 'y' or 'p': " choice 
        case "$choice" in
            y|Y)
                printf "\n%s - Installing yay from AUR\n" "${NOTE}"
                git clone https://aur.archlinux.org/yay-bin.git || { printf "%s - Failed to clone yay from AUR\n" "${ERROR}"; exit 1; }
                cd yay-bin || { printf "%s - Failed to enter yay-bin directory\n" "${ERROR}"; exit 1; }
                makepkg -si --noconfirm 2>&1 | tee -a "$LOG" || { printf "%s - Failed to install yay from AUR\n" "${ERROR}"; exit 1; }
                cd ..
                break
                ;;
            p|P)
                printf "\n%s - Installing paru from AUR\n" "${NOTE}"
                git clone https://aur.archlinux.org/paru-bin.git || { printf "%s - Failed to clone paru from AUR\n" "${ERROR}"; exit 1; }
                cd paru-bin || { printf "%s - Failed to enter paru-bin directory\n" "${ERROR}"; exit 1; }
                makepkg -si --noconfirm 2>&1 | tee -a "$LOG" || { printf "%s - Failed to install paru from AUR\n" "${ERROR}"; exit 1; }
                cd ..
                break
                ;;
            *)
                printf "%s - Invalid choice. Please enter 'y' or 'p'\n" "${ERROR}"
                continue
                ;;
        esac
    done
fi

#clear screen
clear

# Set the script to exit on error
set -e

# Function for installing packages
install_package() {
    # checking if package is already installed
    if $ISAUR -Q "$1" &>> /dev/null ; then
        echo -e "${OK} $1 is already installed. skipping..."
    else
        # package not installed
        echo -e "${NOTE} installing $1 ..."
        $ISAUR -S --noconfirm "$1" 2>&1 | tee -a "$LOG"
        # making sure package installed
        if $ISAUR -Q "$1" &>> /dev/null ; then
            echo -e "\e[1A\e[K${OK} $1 was installed."
        else
            # something is missing, exitting to review log
            echo -e "\e[1A\e[K${ERROR} $1 failed to install :( , please check the install.log . You may need to install manually! Sorry I have tried :("
            exit 1
        fi
    fi
}

### Copy Config Files ###
set -e # Exit immediately if a command exits with a non-zero status.

read -n1 -rep "${CAT} Proceed with upgrade? (y,n)" upgrade

if [[ $upgrade =~ ^[Yy]$ ]]; then
    printf "${NOTE} Installing Theme packages...\n"
    for THEME in catppuccin-gtk-theme-mocha catppuccin-gtk-theme-latte ; do
    install_package "$THEME" 2>&1 | tee -a "$LOG"
        if [ $? -ne 0 ]; then
        echo -e "\e[1A\e[K${ERROR} - $THEME install had failed, please check the install.log"
        exit 1
        fi

        done
    # check for existing config folders and backup 
    for DIR in hypr ; do 
        DIRPATH=~/.config/$DIR
        if [ -d "$DIRPATH" ]; then 
            echo -e "${NOTE} - Config for $DIR found, attempting to back up."
            cp -r $DIRPATH $DIRPATH-back-up 2>&1 | tee -a "$LOG"
            echo -e "${NOTE} - Backed up $DIR to $DIRPATH-back-up."
        fi

        done


        printf " Copying config files...\n"
        rm -r ~/.config/hypr/scripts/waybar-style-change || { echo "Error: Failed to delete waybar-style-change."; exit 1; } 2>&1 | tee -a "$LOG"
        rm -r ~/.config/hypr/scripts/layout-switcher || { echo "Error: Failed to delete layout-switcher."; exit 1; } 2>&1 | tee -a "$LOG"
        cp -r hypr ~/.config/ && { echo "Copy completed!"; } || { echo "Error: Failed to copy wallpapers."; exit 1; } 2>&1 | tee -a "$LOG"
    
        # Set some files as executable 
        chmod +x ~/.config/hypr/scripts/dark-light-mode 2>&1 | tee -a "$LOG"
        chmod +x ~/.config/hypr/scripts/layout-switcher 2>&1 | tee -a "$LOG"
        chmod +x ~/.config/hypr/scripts/waybar-style-change 2>&1 | tee -a "$LOG"

        ### Script is done ###
            printf "\n${OK} Done.\n"
            printf "\n"
            printf "\n"
            read -n1 -rep "${CAT} Would you like to logout (y,n)" HYP

            if [[ $HYP =~ ^[Yy]$ ]]; then
                hyprctl dispatch exit
            else
                exit
            fi

else
    printf "${NOTE} No upgrade done"
    exit
fi





